name: Frontend CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    container: vec7or/pwire-frontend-ci:build
    services:
        postgres:
          image: postgres
          env:
            POSTGRES_DB: pwire
            POSTGRES_USER: pwire
            POSTGRES_PASSWORD: secret

          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: test
      run: |
        cp .env.testing .env
        composer install
        php artisan key:generate
        php artisan migrate
        vendor/bin/phpunit --coverage-text --colors=never
        npm install
        npm run prod
        npm test --ci --coverage
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [test]
    container: vec7or/pwire-frontend-ci:build
    steps:
    - uses: actions/checkout@v2
    - name: build
      run: |
        composer install --optimize-autoloader --no-dev
        npm install
        npm run prod
    - run: echo ::set-output name=SERVER_VERSION::`cat version.txt`
      id: set_version
    - name: Zip release
      run: zip -r build.zip artisan laravel-echo-server.json .env.example composer.json composer.lock package.json package-lock.json vendor storage routes resources public database config tests app bootstrap server.php
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.set_version.outputs.SERVER_VERSION }}
        release_name: Release ${{ steps.set_version.outputs.SERVER_VERSION }}
        draft: false
        prerelease: false
    - name: Upload Release asset
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build.zip
        asset_name: build.zip
        asset_content_type: application/zip